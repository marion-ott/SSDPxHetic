type User {
	id: ID! @id
	searchIndex: String!
	firstName: String!
	lastName: String!
	role: String!
	sector: Sector @relation(name: "UserSector", link: INLINE)
	address: String
	email: String! @unique
	password: String
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type Team {
	id: ID! @id
	users: [User!]! @relation(link: INLINE)
	visits: [Visit!] @relation(name: "TeamVisits", link: INLINE)
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type Visit {
	id: ID! @id
	date: DateTime!
	team: Team! @relation(name: "TeamVisits")
	hotel: Hotel @relation(name: "HotelVisits")
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type Hotel {
	id: ID! @id
	searchIndex: String!
	uuid: Int! @unique
	name: String!
	address: String!
	zipCode: Int!
	city: String!
	active: Boolean!
	rooms: Int!
	lastVisit: DateTime
	score: Float
	sector: Sector! @relation(name: "HotelSector", link: INLINE)
	lat: Float!
	long: Float!
	visits: [Visit!] @relation(name: "HotelVisits", link: INLINE)
	residents: [Resident!] @relation(name: "HotelResidents", link: INLINE)
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type Sector {
	id: ID! @id
	zone: String! @unique
	users: [User!] @relation(name: "UserSector")
	hotels: [Hotel!] @relation(name: "HotelSector")
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

type Resident {
	id: ID! @id
	firstName: String!
	lastName: String!
	phone: Int
	email: String @unique
	dob: DateTime
	gender: Gender
	hotel: Hotel! @relation(name: "HotelResidents")
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
}

enum Role {
	USER
	ADMIN
}

enum MutationType {
	CREATED
	UPDATED
	DELETED
}

enum Gender {
	MALE
	FEMALE
}
